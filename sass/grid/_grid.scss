@import "globals", "functions";

/* #Grid
================================================== */
.container{
    position:         relative; 
    width:            $grid-base; 
    margin:           0 auto; 
    padding:          0;
    
    .column, 
    .columns{
        float:        left; 
        display:      inline; 
        margin-left:  $column-gutter; 
        margin-right: $column-gutter; 
        position:     relative;
        .alpha        { margin-left: 0; }
        .omega        { margin-right: 0; }
    }
    
    /* Base Grid */
    .one.column,
    .one.columns                     { width: col-width(1); }
    .two.columns                     { width: col-width(2); }
    .three.columns                   { width: col-width(3); }
    .four.columns                    { width: col-width(4); }
    .five.columns                    { width: col-width(5); }
    .six.columns                     { width: col-width(6); }
    .seven.columns                   { width: col-width(7); }
    .eight.columns                   { width: col-width(8); }
    .nine.columns                    { width: col-width(9); }
    .ten.columns                     { width: col-width(10); }
    .eleven.columns                  { width: col-width(11); }
    .twelve.columns                  { width: col-width(12); }
    .thirteen.columns                { width: col-width(13); }
    .fourteen.columns                { width: col-width(14); }
    .fifteen.columns                 { width: col-width(15); }
    .sixteen.columns                 { width: col-width(16); }
    
    .one-third.column                { width: ($grid-base / 3) - $both-gutters; }
    .two-thirds.column               { width: (2 * ($grid-base / 3)) - $both-gutters; }
    
    /* Offsets */
    .offset-by-one                   { padding-left: col-offset(1); }
    .offset-by-two                   { padding-left: col-offset(2); }
    .offset-by-three                 { padding-left: col-offset(3); }
    .offset-by-four                  { padding-left: col-offset(4); }
    .offset-by-five                  { padding-left: col-offset(5); }
    .offset-by-six                   { padding-left: col-offset(6); }
    .offset-by-seven                 { padding-left: col-offset(7); }
    .offset-by-eight                 { padding-left: col-offset(8); }
    .offset-by-nine                  { padding-left: col-offset(9); }
    .offset-by-ten                   { padding-left: col-offset(10); }
    .offset-by-eleven                { padding-left: col-offset(11); }
    .offset-by-twelve                { padding-left: col-offset(12); }
    .offset-by-thirteen              { padding-left: col-offset(13); }
    .offset-by-fourteen              { padding-left: col-offset(14); }
    .offset-by-fifteen               { padding-left: col-offset(15); }
    .row                             { margin-bottom: $row-space; }
}



/* #Tablet (Portrait)
================================================== */

/* Note: Design for a width of #{rem($mobile-tablet-portrait)} (#{$mobile-tablet-portrait}px) */

@media #{$mobile-tablet-screen-portrait} {
    .container { 
        width: $tablet-base; 
        .column,
        .columns                         { margin-left: $column-gutter; margin-right: $column-gutter;  }
        .column.alpha, .columns.alpha    { margin-left: 0; margin-right: $column-gutter; }
        .column.omega, .columns.omega    { margin-right: 0; margin-left: $column-gutter; }
        .alpha.omega                     { margin-left: 0; margin-right: 0; }
        
        .one.column,
        .one.columns                  { width: col-width(1, $tablet-base); }
        .two.columns                  { width: col-width(2, $tablet-base); }
        .three.columns                { width: col-width(3, $tablet-base); }
        .four.columns                 { width: col-width(4, $tablet-base); }
        .five.columns                 { width: col-width(5, $tablet-base); }
        .six.columns                  { width: col-width(6, $tablet-base); }
        .seven.columns                { width: col-width(7, $tablet-base); }
        .eight.columns                { width: col-width(8, $tablet-base); }
        .nine.columns                 { width: col-width(9, $tablet-base); }
        .ten.columns                  { width: col-width(10, $tablet-base); }
        .eleven.columns               { width: col-width(11, $tablet-base); }
        .twelve.columns               { width: col-width(12, $tablet-base); }
        .thirteen.columns             { width: col-width(13, $tablet-base); }
        .fourteen.columns             { width: col-width(14, $tablet-base); }
        .fifteen.columns              { width: col-width(15, $tablet-base); }
        .sixteen.columns              { width: col-width(16, $tablet-base); }
        
        .one-third.column             { width: ($tablet-base / 3) - $both-gutters; }
        .two-thirds.column            { width: (2 * ($tablet-base / 3)) - $both-gutters; }
        
        /* Offsets */
        .offset-by-one                { padding-left: col-offset(1, $column-offset-tablet); }
        .offset-by-two                { padding-left: col-offset(2, $column-offset-tablet); }
        .offset-by-three              { padding-left: col-offset(3, $column-offset-tablet); }
        .offset-by-four               { padding-left: col-offset(4, $column-offset-tablet); }
        .offset-by-five               { padding-left: col-offset(5, $column-offset-tablet); }
        .offset-by-six                { padding-left: col-offset(6, $column-offset-tablet); }
        .offset-by-seven              { padding-left: col-offset(7, $column-offset-tablet); }
        .offset-by-eight              { padding-left: col-offset(8, $column-offset-tablet); }
        .offset-by-nine               { padding-left: col-offset(9, $column-offset-tablet); }
        .offset-by-ten                { padding-left: col-offset(10, $column-offset-tablet); }
        .offset-by-eleven             { padding-left: col-offset(11, $column-offset-tablet); }
        .offset-by-twelve             { padding-left: col-offset(12, $column-offset-tablet); }
        .offset-by-thirteen           { padding-left: col-offset(13, $column-offset-tablet); }
        .offset-by-fourteen           { padding-left: col-offset(14, $column-offset-tablet); }
        .offset-by-fifteen            { padding-left: col-offset(15, $column-offset-tablet); }
    }
}


/*  #Mobile (Portrait)
================================================== */

/* Note: Design for a width of #{rem($mobile-phone-portrait)} (#{$mobile-phone-portrait}px) */

@media #{$mobile-phone-screen-portrait} {
    .container {
        width:              $mobile-portrait-base - $both-gutters; 
        .columns,
        .column             { margin: 0; }
        .one.column,
        .one.columns,
        .two.columns,
        .three.columns,
        .four.columns,
        .five.columns,
        .six.columns,
        .seven.columns,
        .eight.columns,
        .nine.columns,
        .ten.columns,
        .eleven.columns,
        .twelve.columns,
        .thirteen.columns,
        .fourteen.columns,
        .fifteen.columns,
        .sixteen.columns,
        .one-third.column,
        .two-thirds.column  { width: 100%; }
        
        /* Offsets */
        .offset-by-one,
        .offset-by-two,
        .offset-by-three,
        .offset-by-four,
        .offset-by-five,
        .offset-by-six,
        .offset-by-seven,
        .offset-by-eight,
        .offset-by-nine,
        .offset-by-ten,
        .offset-by-eleven,
        .offset-by-twelve,
        .offset-by-thirteen,
        .offset-by-fourteen,
        .offset-by-fifteen { padding-left: 0; }
    }

}


/* #Mobile (Landscape)
================================================== */

/* Note: Design for a width of 30em (480px) */

@media #{$mobile-phone-screen-landscape} {
    .container { 
        width:              $mobile-landscape-base - $both-gutters; 
        .columns,
        .column             { margin: 0; }
        .one.column,
        .one.columns,
        .two.columns,
        .three.columns,
        .four.columns,
        .five.columns,
        .six.columns,
        .seven.columns,
        .eight.columns,
        .nine.columns,
        .ten.columns,
        .eleven.columns,
        .twelve.columns,
        .thirteen.columns,
        .fourteen.columns,
        .fifteen.columns,
        .sixteen.columns,
        .one-third.column,
        .two-thirds.column { width: 100%; }
    }
}


/* #Clearing
================================================== */

/* Self Clearing! */
.container:after { content: "\0020"; display: block; height: 0; clear: both; visibility: hidden; }

/* Use clearfix class on parent to clear nested columns,
or wrap each row of columns in a <div class="row"> */
.clearfix:before,
.clearfix:after,
.row:before,
.row:after {
  content: '\0020';
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0; }
.row:after,
.clearfix:after {
  clear: both; }
.row,
.clearfix {
  zoom: 1; }

/* You can also use a <br class="clear" /> to clear columns */
.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}